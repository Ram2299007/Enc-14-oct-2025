plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    signingConfigs {
        debug {
            storeFile file('/Users/ramlohar/AndroidStudioProjects/22Nov2024Enc/enclosure_android_development/Keystore')
            storePassword 'Appzia@1234'
            keyAlias 'key0'
            keyPassword 'Appzia@1234'
        }
    }
    namespace 'com.Appzia.enclosure'
    compileSdk 35



    defaultConfig {
        applicationId "com.Appzia.enclosure"
        minSdk 28
        targetSdk 35
        versionCode 21
        versionName "21.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 31
        renderscriptSupportModeEnabled true
        
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
        
        // 16KB page size support for all native libraries
        manifestPlaceholders = [
            "android.app.page_size_agnostic": "true",
            "android.app.supports_16kb_pages": "true"
        ]
        
        
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    
    ndkVersion "26.1.10909125"
    
    packagingOptions {
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/INDEX.LIST")
        exclude("META-INF/*.SF")
        exclude("META-INF/*.DSA")
        exclude("META-INF/*.RSA")
        pickFirst("**/META-INF/INDEX.LIST")
        pickFirst("**/META-INF/*.SF")
        pickFirst("**/META-INF/*.DSA")
        pickFirst("**/META-INF/*.RSA")
        
        // 16KB page size support for native libraries
        jniLibs {
            useLegacyPackaging = false
        }
    }
    
    // 16KB page size alignment for native libraries
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName.endsWith('.apk')) {
                outputFileName = outputFileName.replace('.apk', '-16kb-aligned.apk')
            }
        }
    }
    
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = false
        }
    }
    
    // 16KB page size support configuration
    splits {
        abi {
            enable true
            reset()
            include 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            universalApk true
        }
    }
    
    // Additional configuration for 16KB support
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    
    // Force 16KB page size support at build level
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.all { output ->
                output.processManifest.doLast {
                    println "Applying aggressive 16KB page size support for ${variant.name}"
                    
                    // Force 16KB alignment in build configuration
                    project.android.defaultConfig.manifestPlaceholders.put("android.app.force_16kb_alignment", "true")
                    project.android.defaultConfig.manifestPlaceholders.put("android.app.native_lib_alignment", "16384")
                }
            }
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // Additional 16KB page size support
    aaptOptions {
        noCompress 'so'
    }
    
    // Force 16KB page size support for all native libraries
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.processManifest.doLast {
                // Add 16KB page size support to manifest
                def manifestFile = file("${buildDir}/intermediates/merged_manifests/${variant.name}/AndroidManifest.xml")
                if (manifestFile.exists()) {
                    def manifest = new XmlSlurper().parse(manifestFile)
                    def application = manifest.application[0]
                    
                    // Add 16KB support meta-data if not present
                    if (!application.meta-data.find { it.'@android:name'.text() == 'android.app.force_16kb_alignment' }) {
                        def metaData = application.appendNode('meta-data')
                        metaData.'@android:name' = 'android.app.force_16kb_alignment'
                        metaData.'@android:value' = 'true'
                    }
                }
            }
        }
    }
}

// 16KB page size support - comprehensive approach
android.applicationVariants.all { variant ->
    if (variant.buildType.name == 'release') {
        variant.outputs.all { output ->
            output.processManifest.doLast {
                println "Configuring 16KB page size support for ${variant.name}"
            }
        }
    }
}

// Task to force 16KB alignment for all native libraries
task force16KBAlignment {
    doLast {
        println "Forcing 16KB alignment for all native libraries..."
        
        def aabFile = file("${buildDir}/outputs/bundle/release/app-release.aab")
        if (aabFile.exists()) {
            println "Running aggressive 16KB alignment script..."
            exec {
                commandLine 'python3', "${project.rootDir}/force_16kb_alignment.py", aabFile.absolutePath
                ignoreExitValue = true
            }
        } else {
            println "AAB file not found, skipping alignment fix"
        }
    }
}

// Make bundleRelease depend on alignment task
tasks.whenTaskAdded { task ->
    if (task.name == 'bundleRelease') {
        task.dependsOn force16KBAlignment
    }
}


dependencies {
    // Core Android libraries
    implementation 'androidx.appcompat:appcompat:1.7.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.activity:activity:1.10.1'
    implementation 'androidx.security:security-crypto:1.1.0'

    // Firebase and Google Play Services
    implementation platform('com.google.firebase:firebase-bom:34.2.0')
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-messaging:25.0.0'
    implementation 'com.google.firebase:firebase-auth:24.0.1'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.android.gms:play-services-maps:19.2.0'
    implementation 'com.google.android.gms:play-services-auth:21.4.0'

    // Networking - Multiple libraries actively used in codebase
    implementation 'com.loopj.android:android-async-http:1.4.11'
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    implementation 'com.squareup.retrofit2:retrofit:3.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:3.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.39.0'
    implementation 'org.jsoup:jsoup:1.21.2'

    // Image loading and processing - Both libraries are actively used in code
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.bumptech.glide:glide:5.0.4'
    implementation 'androidx.camera:camera-core:1.4.2'
    implementation 'com.google.firebase:firebase-crashlytics:20.0.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:5.0.4'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.mikhaellopez:circularimageview:4.3.1'
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    // Media and Animation
    implementation "androidx.media3:media3-exoplayer:1.8.0"
    implementation "androidx.media3:media3-exoplayer-dash:1.8.0"
    implementation "androidx.media3:media3-ui:1.8.0"
    implementation 'com.airbnb.android:lottie:6.6.7'

    // User Interface and Interaction
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.29'
    implementation 'me.tankery.lib:circularSeekBar:1.4.2'
    implementation 'com.fivehundredpx:blurringview:1.0.0'
    implementation 'com.github.AtifSayings:Animatoo:1.0.1'
    implementation 'io.github.ponnamkarthik:richlinkpreview:1.0.9'

    // Permissions and Utilities
    implementation 'com.guolindev.permissionx:permissionx:1.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.20.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:9.0.13'

    // Testing Libraries
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    // Video SDK

    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'com.vdurmont:emoji-java:5.1.1'

    implementation 'com.google.mlkit:smart-reply:17.0.4'

    implementation 'com.github.Dimezis:BlurView:version-2.0.6'


    implementation "androidx.camera:camera-core:1.4.2"
    implementation "androidx.camera:camera-camera2:1.4.2"
    implementation "androidx.camera:camera-lifecycle:1.4.2"
    implementation "androidx.camera:camera-view:1.4.2"
    implementation "androidx.camera:camera-video:1.4.2"
    implementation 'com.google.mlkit:smart-reply:17.0.4'
    implementation 'com.otaliastudios:cameraview:2.7.2'
    implementation "androidx.work:work-runtime:2.10.3"
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    
    // Audio Wave Progress Bar
    implementation 'com.github.alxrm:audiowave-progressbar:0.9.2'
    // Alternative Audio Wave library
    implementation 'com.github.lincollincol:amplituda:2.2.2'
    implementation ('org.jitsi.react:jitsi-meet-sdk:11.2.6') { transitive = true }
    implementation 'io.github.everythingme:overscroll-decor-android:1.1.1'
    implementation 'com.google.android.play:app-update:2.1.0'
    // Apache Commons Logging for compatibility
    implementation 'commons-logging:commons-logging:1.2'


}
